- name: Demo on conditions
  hosts: all
  vars:
    action: true
  tasks:
    - name: Run this only when the system distribution is CentOS    #in our case first task will be executed because we are having centos flavored machines
      ansible.builtin.debug:
        msg: Welcome to {{ansible_distribution}}
      when: ansible_distribution == "CentOS"            #Here when is a condition


    - name: Run this only when the system distribution is Ubuntu
      ansible.builtin.debug:
        msg: Welcome to {{ansible_distribution}}
      when: ansible_distribution == "Ubuntu"  

    - name: Run this action
      ansible.builtin.debug:
         msg: Action is true
      when: action == true   
  
    
    - name: Run this only when the action variable is defined
      ansible.builtin.debug:
         msg: action variable is declared
      when: action is defined                       #THIS WILL BE EXECUTED BECAUSE THE ACTION VARIABLE IS DECLARED


    # - name: Run this only when the action variable is defined
    #   ansible.builtin.debug:
    #     msg: Action variable is declared
    #   when: action is not defined                 # this won be executed because action variable is declare ,the tsk wil be skipped


## Older versions of ansible uses undefined, #latest version of ansible uses not defined .
# defined , not defined, true, false , succeded , failure , all of them are "predefined" keywords as per the ansible documentation .
# Ref : https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_conditionals.html